<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Model_Users', 'doctrine');

/**
 * Model_Base_Users
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $username
 * @property string $email
 * @property string $password
 * @property string $fullname
 * @property timestamp $date
 * @property Doctrine_Collection $Friends
 * @property Doctrine_Collection $Friends_2
 * @property Doctrine_Collection $Friends_3
 * @property Doctrine_Collection $Friends_4
 * @property Doctrine_Collection $Messages
 * @property Doctrine_Collection $Messages_2
 * @property Doctrine_Collection $Messages_3
 * @property Doctrine_Collection $Messages_4
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Model_Base_Users extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('users');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('username', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('password', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '32',
             ));
        $this->hasColumn('fullname', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Model_Friends as Friends', array(
             'local' => 'id',
             'foreign' => 'friend_id'));

        $this->hasMany('Model_Friends as Friends_2', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Model_Friends as Friends_3', array(
             'local' => 'id',
             'foreign' => 'friend_id'));

        $this->hasMany('Model_Friends as Friends_4', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Model_Messages as Messages', array(
             'local' => 'id',
             'foreign' => 'recepient_id'));

        $this->hasMany('Model_Messages as Messages_2', array(
             'local' => 'id',
             'foreign' => 'sender_id'));

        $this->hasMany('Model_Messages as Messages_3', array(
             'local' => 'id',
             'foreign' => 'recepient_id'));

        $this->hasMany('Model_Messages as Messages_4', array(
             'local' => 'id',
             'foreign' => 'sender_id'));
    }
}